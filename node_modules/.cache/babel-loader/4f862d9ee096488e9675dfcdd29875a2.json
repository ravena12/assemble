{"ast":null,"code":"var _jsxFileName = \"/Users/ravenanderson/Documents/react-spa/src/components/Form.js\";\nimport React, { Component } from 'react';\nimport { CardElement, injectStripe, ReactStripeElements, stripe, registerElements } from 'react-stripe-elements';\n\nclass Form extends Component {\n  render() {\n    (function () {\n      'use strict';\n\n      var elements = stripe.elements({\n        fonts: [{\n          cssSrc: 'https://fonts.googleapis.com/css?family=Source+Code+Pro'\n        }],\n        // Stripe's examples are localized to specific languages, but if\n        // you wish to have Elements automatically detect your user's locale,\n        // use `locale: 'auto'` instead.\n        locale: window.__exampleLocale\n      }); // Floating labels\n\n      var inputs = document.querySelectorAll('.cell.example.example2 .input');\n      Array.prototype.forEach.call(inputs, function (input) {\n        input.addEventListener('focus', function () {\n          input.classList.add('focused');\n        });\n        input.addEventListener('blur', function () {\n          input.classList.remove('focused');\n        });\n        input.addEventListener('keyup', function () {\n          if (input.value.length === 0) {\n            input.classList.add('empty');\n          } else {\n            input.classList.remove('empty');\n          }\n        });\n      });\n      var elementStyles = {\n        base: {\n          color: '#32325D',\n          fontWeight: 500,\n          fontFamily: 'Source Code Pro, Consolas, Menlo, monospace',\n          fontSize: '16px',\n          fontSmoothing: 'antialiased',\n          '::placeholder': {\n            color: '#CFD7DF'\n          },\n          ':-webkit-autofill': {\n            color: '#e39f48'\n          }\n        },\n        invalid: {\n          color: '#E25950',\n          '::placeholder': {\n            color: '#FFCCA5'\n          }\n        }\n      };\n      var elementClasses = {\n        focus: 'focused',\n        empty: 'empty',\n        invalid: 'invalid'\n      };\n      var cardNumber = elements.create('cardNumber', {\n        style: elementStyles,\n        classes: elementClasses\n      });\n      cardNumber.mount('#example2-card-number');\n      var cardExpiry = elements.create('cardExpiry', {\n        style: elementStyles,\n        classes: elementClasses\n      });\n      cardExpiry.mount('#example2-card-expiry');\n      var cardCvc = elements.create('cardCvc', {\n        style: elementStyles,\n        classes: elementClasses\n      });\n      cardCvc.mount('#example2-card-cvc');\n      registerElements([cardNumber, cardExpiry, cardCvc], 'example2');\n    })();\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"/charge\",\n      method: \"post\",\n      id: \"payment-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"card-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Credit or debit card\"), React.createElement(\"div\", {\n      id: \"card-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"card-errors\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Submit Payment\"))));\n  }\n\n}\n\nexport default injectStripe(Form);","map":{"version":3,"sources":["/Users/ravenanderson/Documents/react-spa/src/components/Form.js"],"names":["React","Component","CardElement","injectStripe","ReactStripeElements","stripe","registerElements","Form","render","elements","fonts","cssSrc","locale","window","__exampleLocale","inputs","document","querySelectorAll","Array","prototype","forEach","call","input","addEventListener","classList","add","remove","value","length","elementStyles","base","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","elementClasses","focus","empty","cardNumber","create","style","classes","mount","cardExpiry","cardCvc"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\nimport { CardElement, injectStripe, ReactStripeElements , stripe, registerElements} from 'react-stripe-elements';\n\n\nclass Form extends Component {\n    render() {\n        (function() {\n            'use strict';\n          \n            var elements = stripe.elements({\n              fonts: [\n                {\n                  cssSrc: 'https://fonts.googleapis.com/css?family=Source+Code+Pro',\n                },\n              ],\n              // Stripe's examples are localized to specific languages, but if\n              // you wish to have Elements automatically detect your user's locale,\n              // use `locale: 'auto'` instead.\n              locale: window.__exampleLocale\n            });\n          \n            // Floating labels\n            var inputs = document.querySelectorAll('.cell.example.example2 .input');\n            Array.prototype.forEach.call(inputs, function(input) {\n              input.addEventListener('focus', function() {\n                input.classList.add('focused');\n              });\n              input.addEventListener('blur', function() {\n                input.classList.remove('focused');\n              });\n              input.addEventListener('keyup', function() {\n                if (input.value.length === 0) {\n                  input.classList.add('empty');\n                } else {\n                  input.classList.remove('empty');\n                }\n              });\n            });\n          \n            var elementStyles = {\n              base: {\n                color: '#32325D',\n                fontWeight: 500,\n                fontFamily: 'Source Code Pro, Consolas, Menlo, monospace',\n                fontSize: '16px',\n                fontSmoothing: 'antialiased',\n          \n                '::placeholder': {\n                  color: '#CFD7DF',\n                },\n                ':-webkit-autofill': {\n                  color: '#e39f48',\n                },\n              },\n              invalid: {\n                color: '#E25950',\n          \n                '::placeholder': {\n                  color: '#FFCCA5',\n                },\n              },\n            };\n          \n            var elementClasses = {\n              focus: 'focused',\n              empty: 'empty',\n              invalid: 'invalid',\n            };\n          \n            var cardNumber = elements.create('cardNumber', {\n              style: elementStyles,\n              classes: elementClasses,\n            });\n            cardNumber.mount('#example2-card-number');\n          \n            var cardExpiry = elements.create('cardExpiry', {\n              style: elementStyles,\n              classes: elementClasses,\n            });\n            cardExpiry.mount('#example2-card-expiry');\n          \n            var cardCvc = elements.create('cardCvc', {\n              style: elementStyles,\n              classes: elementClasses,\n            });\n            cardCvc.mount('#example2-card-cvc');\n          \n            registerElements([cardNumber, cardExpiry, cardCvc], 'example2');\n          })();\n        return(\n            <div>\n                <main className=\"container\">\n                    <form action=\"/charge\" method=\"post\" id=\"payment-form\">\n                        <div class=\"form-row\">\n                            <label for=\"card-element\">\n                            Credit or debit card\n                            </label>\n                            <div id=\"card-element\">\n                            </div>\n\n                            <div id=\"card-errors\" role=\"alert\"></div>\n                        </div>\n\n                        <button>Submit Payment</button>\n                    </form>\n                </main>\n\n            </div>\n        )\n    }\n}\n\n\n\nexport default injectStripe(Form);"]},"metadata":{},"sourceType":"module"}