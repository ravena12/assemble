{"ast":null,"code":"(function () {\n  'use strict';\n\n  var elements = stripe.elements({\n    fonts: [{\n      cssSrc: 'https://fonts.googleapis.com/css?family=Source+Code+Pro'\n    }],\n    // Stripe's examples are localized to specific languages, but if\n    // you wish to have Elements automatically detect your user's locale,\n    // use `locale: 'auto'` instead.\n    locale: window.__exampleLocale\n  }); // Floating labels\n\n  var inputs = document.querySelectorAll('.cell.example.example2 .input');\n  Array.prototype.forEach.call(inputs, function (input) {\n    input.addEventListener('focus', function () {\n      input.classList.add('focused');\n    });\n    input.addEventListener('blur', function () {\n      input.classList.remove('focused');\n    });\n    input.addEventListener('keyup', function () {\n      if (input.value.length === 0) {\n        input.classList.add('empty');\n      } else {\n        input.classList.remove('empty');\n      }\n    });\n  });\n  var elementStyles = {\n    base: {\n      color: '#32325D',\n      fontWeight: 500,\n      fontFamily: 'Source Code Pro, Consolas, Menlo, monospace',\n      fontSize: '16px',\n      fontSmoothing: 'antialiased',\n      '::placeholder': {\n        color: '#CFD7DF'\n      },\n      ':-webkit-autofill': {\n        color: '#e39f48'\n      }\n    },\n    invalid: {\n      color: '#E25950',\n      '::placeholder': {\n        color: '#FFCCA5'\n      }\n    }\n  };\n  var elementClasses = {\n    focus: 'focused',\n    empty: 'empty',\n    invalid: 'invalid'\n  };\n  var cardNumber = elements.create('cardNumber', {\n    style: elementStyles,\n    classes: elementClasses\n  });\n  cardNumber.mount('#example2-card-number');\n  var cardExpiry = elements.create('cardExpiry', {\n    style: elementStyles,\n    classes: elementClasses\n  });\n  cardExpiry.mount('#example2-card-expiry');\n  var cardCvc = elements.create('cardCvc', {\n    style: elementStyles,\n    classes: elementClasses\n  });\n  cardCvc.mount('#example2-card-cvc');\n  registerElements([cardNumber, cardExpiry, cardCvc], 'example2');\n})();","map":{"version":3,"sources":["/Users/ravenanderson/Documents/react-spa/src/components/Form.js"],"names":["elements","stripe","fonts","cssSrc","locale","window","__exampleLocale","inputs","document","querySelectorAll","Array","prototype","forEach","call","input","addEventListener","classList","add","remove","value","length","elementStyles","base","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","elementClasses","focus","empty","cardNumber","create","style","classes","mount","cardExpiry","cardCvc","registerElements"],"mappings":"AAAA,CAAC,YAAW;AACR;;AAEA,MAAIA,QAAQ,GAAGC,MAAM,CAACD,QAAP,CAAgB;AAC7BE,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AADV,KADK,CADsB;AAM7B;AACA;AACA;AACAC,IAAAA,MAAM,EAAEC,MAAM,CAACC;AATc,GAAhB,CAAf,CAHQ,CAeR;;AACA,MAAIC,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,+BAA1B,CAAb;AACAC,EAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BN,MAA7B,EAAqC,UAASO,KAAT,EAAgB;AACnDA,IAAAA,KAAK,CAACC,gBAAN,CAAuB,OAAvB,EAAgC,YAAW;AACzCD,MAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,SAApB;AACD,KAFD;AAGAH,IAAAA,KAAK,CAACC,gBAAN,CAAuB,MAAvB,EAA+B,YAAW;AACxCD,MAAAA,KAAK,CAACE,SAAN,CAAgBE,MAAhB,CAAuB,SAAvB;AACD,KAFD;AAGAJ,IAAAA,KAAK,CAACC,gBAAN,CAAuB,OAAvB,EAAgC,YAAW;AACzC,UAAID,KAAK,CAACK,KAAN,CAAYC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BN,QAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,OAApB;AACD,OAFD,MAEO;AACLH,QAAAA,KAAK,CAACE,SAAN,CAAgBE,MAAhB,CAAuB,OAAvB;AACD;AACF,KAND;AAOD,GAdD;AAgBA,MAAIG,aAAa,GAAG;AAClBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,SADH;AAEJC,MAAAA,UAAU,EAAE,GAFR;AAGJC,MAAAA,UAAU,EAAE,6CAHR;AAIJC,MAAAA,QAAQ,EAAE,MAJN;AAKJC,MAAAA,aAAa,EAAE,aALX;AAOJ,uBAAiB;AACfJ,QAAAA,KAAK,EAAE;AADQ,OAPb;AAUJ,2BAAqB;AACnBA,QAAAA,KAAK,EAAE;AADY;AAVjB,KADY;AAelBK,IAAAA,OAAO,EAAE;AACPL,MAAAA,KAAK,EAAE,SADA;AAGP,uBAAiB;AACfA,QAAAA,KAAK,EAAE;AADQ;AAHV;AAfS,GAApB;AAwBA,MAAIM,cAAc,GAAG;AACnBC,IAAAA,KAAK,EAAE,SADY;AAEnBC,IAAAA,KAAK,EAAE,OAFY;AAGnBH,IAAAA,OAAO,EAAE;AAHU,GAArB;AAMA,MAAII,UAAU,GAAGhC,QAAQ,CAACiC,MAAT,CAAgB,YAAhB,EAA8B;AAC7CC,IAAAA,KAAK,EAAEb,aADsC;AAE7Cc,IAAAA,OAAO,EAAEN;AAFoC,GAA9B,CAAjB;AAIAG,EAAAA,UAAU,CAACI,KAAX,CAAiB,uBAAjB;AAEA,MAAIC,UAAU,GAAGrC,QAAQ,CAACiC,MAAT,CAAgB,YAAhB,EAA8B;AAC7CC,IAAAA,KAAK,EAAEb,aADsC;AAE7Cc,IAAAA,OAAO,EAAEN;AAFoC,GAA9B,CAAjB;AAIAQ,EAAAA,UAAU,CAACD,KAAX,CAAiB,uBAAjB;AAEA,MAAIE,OAAO,GAAGtC,QAAQ,CAACiC,MAAT,CAAgB,SAAhB,EAA2B;AACvCC,IAAAA,KAAK,EAAEb,aADgC;AAEvCc,IAAAA,OAAO,EAAEN;AAF8B,GAA3B,CAAd;AAIAS,EAAAA,OAAO,CAACF,KAAR,CAAc,oBAAd;AAEAG,EAAAA,gBAAgB,CAAC,CAACP,UAAD,EAAaK,UAAb,EAAyBC,OAAzB,CAAD,EAAoC,UAApC,CAAhB;AACD,CAlFH","sourcesContent":["(function() {\n    'use strict';\n  \n    var elements = stripe.elements({\n      fonts: [\n        {\n          cssSrc: 'https://fonts.googleapis.com/css?family=Source+Code+Pro',\n        },\n      ],\n      // Stripe's examples are localized to specific languages, but if\n      // you wish to have Elements automatically detect your user's locale,\n      // use `locale: 'auto'` instead.\n      locale: window.__exampleLocale\n    });\n  \n    // Floating labels\n    var inputs = document.querySelectorAll('.cell.example.example2 .input');\n    Array.prototype.forEach.call(inputs, function(input) {\n      input.addEventListener('focus', function() {\n        input.classList.add('focused');\n      });\n      input.addEventListener('blur', function() {\n        input.classList.remove('focused');\n      });\n      input.addEventListener('keyup', function() {\n        if (input.value.length === 0) {\n          input.classList.add('empty');\n        } else {\n          input.classList.remove('empty');\n        }\n      });\n    });\n  \n    var elementStyles = {\n      base: {\n        color: '#32325D',\n        fontWeight: 500,\n        fontFamily: 'Source Code Pro, Consolas, Menlo, monospace',\n        fontSize: '16px',\n        fontSmoothing: 'antialiased',\n  \n        '::placeholder': {\n          color: '#CFD7DF',\n        },\n        ':-webkit-autofill': {\n          color: '#e39f48',\n        },\n      },\n      invalid: {\n        color: '#E25950',\n  \n        '::placeholder': {\n          color: '#FFCCA5',\n        },\n      },\n    };\n  \n    var elementClasses = {\n      focus: 'focused',\n      empty: 'empty',\n      invalid: 'invalid',\n    };\n  \n    var cardNumber = elements.create('cardNumber', {\n      style: elementStyles,\n      classes: elementClasses,\n    });\n    cardNumber.mount('#example2-card-number');\n  \n    var cardExpiry = elements.create('cardExpiry', {\n      style: elementStyles,\n      classes: elementClasses,\n    });\n    cardExpiry.mount('#example2-card-expiry');\n  \n    var cardCvc = elements.create('cardCvc', {\n      style: elementStyles,\n      classes: elementClasses,\n    });\n    cardCvc.mount('#example2-card-cvc');\n  \n    registerElements([cardNumber, cardExpiry, cardCvc], 'example2');\n  })();"]},"metadata":{},"sourceType":"module"}